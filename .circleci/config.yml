version: 2.1

orbs:
  snyk: snyk/snyk@0.0.10

workflows:
  integration:
    jobs:
      - checkout_code
      # - lint:
      #     requires:
      #       - checkout_code
      # - test:
      #     requires:
      #       - checkout_code
      # - security-scan:
      #     requires:
      #       - checkout_code
      - compile:
          requires:
            - checkout_code
            # - lint
            # - test
            # - security-scan
      - release:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+.*$/
          requires:
            - compile

jobs:
  checkout_code:
    docker:
      - image: circleci/golang:1.14
    steps:
      - checkout
      - run: git fetch --tags
      - save_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/project

  # lint:
  #   docker:
  #     - image: circleci/golang:1.14
  #   steps:
  #     - restore_cache:
  #         key: repo-{{ .Environment.CIRCLE_SHA1 }}
  #     - run:
  #         name: Lint
  #         command: make lint

  # test:
  #   docker:
  #     - image: circleci/golang:1.14
  #   steps:
  #     - restore_cache:
  #         key: repo-{{ .Environment.CIRCLE_SHA1 }}
  #     - run:
  #         name: Unit Tests
  #         command: make test-unit
  #     - run:
  #         name: Integration Tests
  #         command: make test-integration

  # security-scan:
  #   docker:
  #     - image: circleci/golang:1.14
  #   steps:
  #     - restore_cache:
  #         key: repo-{{ .Environment.CIRCLE_SHA1 }}
  #     - snyk/scan:
  #         severity-threshold: high
  #         fail-on-issues: false
  #         monitor-on-build: true

  compile:
    docker:
      - image: circleci/golang:1.14
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: make compile-only

  release:
    docker:
      - image: circleci/golang:1.14
    steps:
      - add_ssh_keys:
          fingerprints:
            - '73:b9:8e:37:fa:cd:52:8a:df:9a:49:e3:bb:0f:6f:d2'
      - checkout
      # - setup_remote_docker:
      #     docker_layer_caching: true
      - run:
          name: 'Setup custom environment variables 1'
          command: |
            echo 'export GIT_TAG=$(git describe --tags | tr -d "v")' >> $BASH_ENV
            echo 'export TAG=$CIRCLE_TAG' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: 'Publish release and generate Homebrew formula'
          environment:
            TAG: .Environment.CIRCLE_TAG
          command: |
            make release-publish
            ./scripts/brew-formula.sh
