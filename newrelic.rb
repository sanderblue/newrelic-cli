# This file was generated by GoReleaser. DO NOT EDIT.
class Newrelic < Formula
  desc "New Relic CLI"
  homepage "https://github.com/sanderblue/newrelic-cli"
  version "0.6.2-test"
  bottle :unneeded

  if OS.mac?
    url "https://github.com/newrelic/newrelic-cli/releases/download/v0.6.2-test/newrelic-cli_0.6.2-test_Darwin_x86_64.tar.gz"
    sha256 "8d6366352813fc94f7e5eb02555a146d1fe3027a961ae7d7a5ed75ea6204c76d"
  elsif OS.linux?
    if Hardware::CPU.intel?
      url "https://github.com/newrelic/newrelic-cli/releases/download/v0.6.2-test/newrelic-cli_0.6.2-test_Linux_x86_64.tar.gz"
      sha256 "c73f5f8969f8364a1d59c4b67b5474417af934fd0276a873091092f416235e6f"
    end
  end
  
  url "https://github.com/newrelic/newrelic-cli/archive/v0.6.2.tar.gz"
  sha256 "603bf5b23e8f986085596b0728503eaa46d41cb31d1c3ac9f1988ac7d48219ec"
  head "https://github.com/newrelic/newrelic-cli.git"
  
  depends_on "go"

  def install
    ENV["PROJECT_VER"] = version
    system "make", "compile-only"
    bin.install "bin/darwin/newrelic"
    output = Utils.popen_read("#{bin}/newrelic completion --shell bash")
    (bash_completion/"newrelic").write output
    output = Utils.popen_read("#{bin}/newrelic completion --shell zsh")
    (zsh_completion/"_newrelic").write output
  end

  test do
    assert_match /pluginDir/, shell_output("#{bin}/newrelic config list")
    assert_match /logLevel/, shell_output("#{bin}/newrelic config list")
    assert_match /sendUsageData/, shell_output("#{bin}/newrelic config list")
    assert_match version.to_s, shell_output("#{bin}/newrelic version 2>&1")
  end
end
